@page "/Forelder"
@using BlazorApp.Store
@using BlazorApp.Data
@using BlazorApp.Data.Models
@inject AppState AppState
@inject StreakChallengeService StreakChallengeService
<MudGrid>
    <MudItem sm-6>
        @foreach (var challenge in ActiveChallengesImre)
        {
            <MudText Typo="Typo.subtitle1">@challenge.Title</MudText>
            @foreach (var date in challenge.DatesCompleted)
            {
                if (date.Status == ChoreStatus.Pending)
                {
                    <MudText>@date.DateCompleted.Date.DayOfWeek @date.DateCompleted.Day.@date.DateCompleted.Month</MudText>
                    <MudButton @onclick="() => ApproveDate(date, challenge.Id, ChoreStatus.Done)" Variant="Variant.Outlined">Approve</MudButton>
                    <MudButton @onclick="() => ApproveDate(date, challenge.Id, ChoreStatus.Rejected)" Variant="Variant.Outlined">Reject</MudButton>
                }
                else
                {
                    <MudText>@date.DateCompleted.Date: @date.Status</MudText>
                }
            }
        }
    </MudItem>
    
</MudGrid>

@code {
    private List<StreakChallenge> ActiveChallengesImre { get; set; } = new();
    private List<StreakChallenge> ActiveChallengesKlara { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        ActiveChallengesImre = await StreakChallengeService.GetActiveChallenges(Children.Imre);
        ActiveChallengesKlara = await StreakChallengeService.GetActiveChallenges(Children.Klara);
        
        StateHasChanged();
    }


    private async Task ApproveDate(StreakChallengeDate date, int challengeId, ChoreStatus choreStatus)
    {
        try
        {
            await StreakChallengeService.ApproveDate(date, challengeId, choreStatus);
            ActiveChallengesImre = await StreakChallengeService.GetActiveChallenges(Children.Imre);
            ActiveChallengesKlara = await StreakChallengeService.GetActiveChallenges(Children.Klara);
        
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

}