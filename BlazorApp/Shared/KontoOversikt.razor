@using BlazorApp.Store
@using BlazorApp.Data.Models
@inject IConfiguration Configuration
@inject AppState AppState
@if (AppState.Loading)
{
    <Loading/>
}
else
{
    <MudItem sm="12" Style="position: fixed; bottom: 0; width: 100%; left: 0; z-index: -1">
        <MudText Align="Align.Center" Typo="Typo.h3">PÃ¥ konto</MudText>
        <MudText Typo="Typo.h1" Align="Align.Center" Style="font-size: 12rem; font-weight: bold" Color="Color.Tertiary">@AppState.AvailableImre kr </MudText>
    </MudItem>
}



@code {

    [Parameter]
    public required string Name { get; set; } = "";
    [Parameter]
    public AccountItem? Account { get; set; }
    
    protected override void OnInitialized()
    {
        AppState.OnChange += StateHasChanged;
    }

    public int GetAccount()
    {
        return AppState.CurrentChild == Children.Imre ? AppState.AvailableImre : AppState.AvailableKlara;
    }
    
    public void Dispose()
    {
        AppState.OnChange -= StateHasChanged;
    }
}